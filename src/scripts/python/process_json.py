import json
import re

# * Run this script from the root of the project.


# import artist_name from data/artist_name.txt
def process_json():
    """
    Process the JSON file generated by the Genius API and save it in a new format.
    """
    with open(
        "public/artist_name.txt",
        "r",
        encoding="utf-8",
    ) as file:
        artist_name = file.read().strip().lower().replace(" ", "_")

    json_file = f"src/data/raw/{artist_name}.json"
    with open(json_file, "r", encoding="utf-8") as file:
        data = json.load(file)
    song_titles = [song.get("title", "Unknown Title") for song in data.get("songs", [])]
    images = [
        song.get("header_image_thumbnail_url", "No Image")
        for song in data.get("songs", [])
    ]
    lyrics = [song.get("lyrics", "No Lyrics") for song in data.get("songs", [])]
    # print(song_titles[1], lyrics[1])

    # Regex for section headers
    section_re = re.compile(
        r"\[(Chorus|Intro|Verse|Bridge|Refrain|Hook|Outro|Pre-Chorus|Interlude|Break|Drop|Post-Chorus)[^\]]*\]",
        re.IGNORECASE,
    )

    # Helper to split lyrics into all sections (allow duplicates)
    def split_sections(lyric):
        sections = []
        titles = set()
        matches = list(section_re.finditer(lyric))
        if matches:
            for i, match in enumerate(matches):
                start = match.end()
                end = matches[i + 1].start() if i + 1 < len(matches) else len(lyric)
                section_title = match.group(0)
                section_content = lyric[start:end].strip()
                if section_title.split(":")[0].strip() not in titles:
                    titles.add(section_title.split(":")[0].strip())
                    sections.append(
                        {
                            "title": section_title,
                            "content": section_content,
                        }
                    )
        else:
            # No section headers: if lyrics start after a 'Lyrics' marker, trim to start after it
            match = re.search(r"(?i)lyrics\s*\n?", lyric)
            if match:
                lyric = lyric[match.end() :]
            parts = [
                part.strip() for part in re.split(r"\n\s*\n", lyric) if part.strip()
            ]
            for idx, part in enumerate(parts):
                sections.append({"title": f"Section {idx+1}", "content": part})
        return sections

    out_lyrics = [split_sections(lyric) for lyric in lyrics]

    songs = [
        {"title": title, "lyrics": lyric_sections, "image": image}
        for title, lyric_sections, image in zip(song_titles, out_lyrics, images)
    ]
    # songs = sorted(songs, key=lambda x: x["title"].lower())

    # Write to new JSON file
    with open(
        f"src/data/processed/{artist_name}.json",
        "w",
        encoding="utf-8",
    ) as outfile:
        json.dump(songs, outfile, ensure_ascii=False, indent=2)


if __name__ == "__main__":
    process_json()
